<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vplan.backend.mapper.base.PaperBaseMapper">


    <insert id="insertPaperModel" >
        INSERT INTO `paper`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="name!=null">
                        `name`,
                    </if>
                    <if test="subject!=null">
                        `subject`,
                    </if>
                    <if test="level!=null">
                        `level`,
                    </if>
                    <if test="area!=null">
                        `area`,
                    </if>
                    <if test="source!=null">
                        `source`,
                    </if>
                    <if test="difficulty!=null">
                        `difficulty`,
                    </if>
                    <if test="pay_rmb!=null">
                        `pay_rmb`,
                    </if>
                    <if test="pay_coin!=null">
                        `pay_coin`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="name!=null">
                    #{name},
                </if>
                <if test="subject!=null">
                    #{subject},
                </if>
                <if test="level!=null">
                    #{level},
                </if>
                <if test="area!=null">
                    #{area},
                </if>
                <if test="source!=null">
                    #{source},
                </if>
                <if test="difficulty!=null">
                    #{difficulty},
                </if>
                <if test="pay_rmb!=null">
                    #{pay_rmb},
                </if>
                <if test="pay_coin!=null">
                    #{pay_coin},
                </if>
        </trim>
        )
    </insert>




    <update id="updatePaperModel">
        UPDATE `paper`
        SET
        <trim suffixOverrides=",">
            <if test="name != null and name!=''">
                `name` = #{name},
            </if>
            <if test="subject != null">
                `subject` = #{subject},
            </if>
            <if test="level != null">
                `level` = #{level},
            </if>
            <if test="area != null and area!=''">
                `area` = #{area},
            </if>
            <if test="source != null and source!=''">
                `source` = #{source},
            </if>
            <if test="difficulty != null">
                `difficulty` = #{difficulty},
            </if>
            <if test="pay_rmb != null">
                `pay_rmb` = #{pay_rmb},
            </if>
            <if test="pay_coin != null">
                `pay_coin` = #{pay_coin},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `paper`
        SET
        <trim suffixOverrides=",">
        <if test="set.name != null and set.name!=''">
            `name` = #{set.name},
        </if>
        <if test="set.subject != null">
            `subject` = #{set.subject},
        </if>
        <if test="set.level != null">
            `level` = #{set.level},
        </if>
        <if test="set.area != null and set.area!=''">
            `area` = #{set.area},
        </if>
        <if test="set.source != null and set.source!=''">
            `source` = #{set.source},
        </if>
        <if test="set.difficulty != null">
            `difficulty` = #{set.difficulty},
        </if>
        <if test="set.pay_rmb != null">
            `pay_rmb` = #{set.pay_rmb},
        </if>
        <if test="set.pay_coin != null">
            `pay_coin` = #{set.pay_coin},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.nameList != null">
                    `name` in
                    <foreach collection="where.nameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyName!=null and where.fuzzyName.size()>0">
                (
                <foreach collection="where.fuzzyName"  separator="or" item="item">
                    `Name` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyName!=null and where.rightFuzzyName.size()>0">
                (
                <foreach collection="where.rightFuzzyName"  separator="or" item="item">
                    `Name` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.subjectList != null">
                    `subject` in
                    <foreach collection="where.subjectList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.subjectSt !=null">
                `subject` >= #{where.subjectSt} and
            </if>
            <if test="where.subjectEd!=null">
                `subject` &lt;= #{where.subjectEd} and
            </if>
                <if test="where.levelList != null">
                    `level` in
                    <foreach collection="where.levelList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.levelSt !=null">
                `level` >= #{where.levelSt} and
            </if>
            <if test="where.levelEd!=null">
                `level` &lt;= #{where.levelEd} and
            </if>
                <if test="where.areaList != null">
                    `area` in
                    <foreach collection="where.areaList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyArea!=null and where.fuzzyArea.size()>0">
                (
                <foreach collection="where.fuzzyArea"  separator="or" item="item">
                    `Area` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyArea!=null and where.rightFuzzyArea.size()>0">
                (
                <foreach collection="where.rightFuzzyArea"  separator="or" item="item">
                    `Area` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.sourceList != null">
                    `source` in
                    <foreach collection="where.sourceList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzySource!=null and where.fuzzySource.size()>0">
                (
                <foreach collection="where.fuzzySource"  separator="or" item="item">
                    `Source` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzySource!=null and where.rightFuzzySource.size()>0">
                (
                <foreach collection="where.rightFuzzySource"  separator="or" item="item">
                    `Source` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.difficultyList != null">
                    `difficulty` in
                    <foreach collection="where.difficultyList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.difficultySt !=null">
                `difficulty` >= #{where.difficultySt} and
            </if>
            <if test="where.difficultyEd!=null">
                `difficulty` &lt;= #{where.difficultyEd} and
            </if>
                <if test="where.pay_rmbList != null">
                    `pay_rmb` in
                    <foreach collection="where.pay_rmbList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.pay_rmbSt !=null">
                `pay_rmb` >= #{where.pay_rmbSt} and
            </if>
            <if test="where.pay_rmbEd!=null">
                `pay_rmb` &lt;= #{where.pay_rmbEd} and
            </if>
                <if test="where.pay_coinList != null">
                    `pay_coin` in
                    <foreach collection="where.pay_coinList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.pay_coinSt !=null">
                `pay_coin` >= #{where.pay_coinSt} and
            </if>
            <if test="where.pay_coinEd!=null">
                `pay_coin` &lt;= #{where.pay_coinEd} and
            </if>
        </trim>
    </update>


    <resultMap type="com.vplan.backend.model.PaperModel" id="PaperModelMap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="subject" column="subject"/>
        <result property="level" column="level"/>
        <result property="area" column="area"/>
        <result property="source" column="source"/>
        <result property="difficulty" column="difficulty"/>
        <result property="pay_rmb" column="pay_rmb"/>
        <result property="pay_coin" column="pay_coin"/>
    </resultMap>


    <select id="queryPaperModel" resultMap="PaperModelMap">
        select
        <include refid="baseResult"></include>
        from  `paper`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="name != null and name!=''">
                `name` = #{name} and
            </if>
            <if test="subject != null">
                `subject` = #{subject} and
            </if>
            <if test="level != null">
                `level` = #{level} and
            </if>
            <if test="area != null and area!=''">
                `area` = #{area} and
            </if>
            <if test="source != null and source!=''">
                `source` = #{source} and
            </if>
            <if test="difficulty != null">
                `difficulty` = #{difficulty} and
            </if>
            <if test="pay_rmb != null">
                `pay_rmb` = #{pay_rmb} and
            </if>
            <if test="pay_coin != null">
                `pay_coin` = #{pay_coin} and
            </if>
            <if test = "(_parameter instanceof com.vplan.backend.model.PaperModel$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="nameList != null">
                    `name` in
                    <foreach collection="nameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyName!=null and fuzzyName.size()>0">
                    (
                    <foreach collection="fuzzyName"  separator="or" item="item">
                        `Name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyName!=null and rightFuzzyName.size()>0">
                    (
                    <foreach collection="rightFuzzyName"  separator="or" item="item">
                        `Name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="subjectList != null">
                    `subject` in
                    <foreach collection="subjectList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="subjectSt !=null">
                    `subject` >= #{subjectSt} and
                </if>
                <if test="subjectEd!=null">
                    `subject` &lt;= #{subjectEd} and
                </if>
                <if test="levelList != null">
                    `level` in
                    <foreach collection="levelList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="levelSt !=null">
                    `level` >= #{levelSt} and
                </if>
                <if test="levelEd!=null">
                    `level` &lt;= #{levelEd} and
                </if>
                <if test="areaList != null">
                    `area` in
                    <foreach collection="areaList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyArea!=null and fuzzyArea.size()>0">
                    (
                    <foreach collection="fuzzyArea"  separator="or" item="item">
                        `Area` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyArea!=null and rightFuzzyArea.size()>0">
                    (
                    <foreach collection="rightFuzzyArea"  separator="or" item="item">
                        `Area` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="sourceList != null">
                    `source` in
                    <foreach collection="sourceList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzySource!=null and fuzzySource.size()>0">
                    (
                    <foreach collection="fuzzySource"  separator="or" item="item">
                        `Source` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzySource!=null and rightFuzzySource.size()>0">
                    (
                    <foreach collection="rightFuzzySource"  separator="or" item="item">
                        `Source` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="difficultyList != null">
                    `difficulty` in
                    <foreach collection="difficultyList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="difficultySt !=null">
                    `difficulty` >= #{difficultySt} and
                </if>
                <if test="difficultyEd!=null">
                    `difficulty` &lt;= #{difficultyEd} and
                </if>
                <if test="pay_rmbList != null">
                    `pay_rmb` in
                    <foreach collection="pay_rmbList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="pay_rmbSt !=null">
                    `pay_rmb` >= #{pay_rmbSt} and
                </if>
                <if test="pay_rmbEd!=null">
                    `pay_rmb` &lt;= #{pay_rmbEd} and
                </if>
                <if test="pay_coinList != null">
                    `pay_coin` in
                    <foreach collection="pay_coinList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="pay_coinSt !=null">
                    `pay_coin` >= #{pay_coinSt} and
                </if>
                <if test="pay_coinEd!=null">
                    `pay_coin` &lt;= #{pay_coinEd} and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryPaperModelLimit1" resultMap="PaperModelMap">
        select
        <include refid="baseResult"></include>
        from  `paper`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="name != null and name!=''">
                `name` = #{name} and
            </if>
            <if test="subject != null">
                `subject` = #{subject} and
            </if>
            <if test="level != null">
                `level` = #{level} and
            </if>
            <if test="area != null and area!=''">
                `area` = #{area} and
            </if>
            <if test="source != null and source!=''">
                `source` = #{source} and
            </if>
            <if test="difficulty != null">
                `difficulty` = #{difficulty} and
            </if>
            <if test="pay_rmb != null">
                `pay_rmb` = #{pay_rmb} and
            </if>
            <if test="pay_coin != null">
                `pay_coin` = #{pay_coin} and
            </if>
            <if test = "(_parameter instanceof com.vplan.backend.model.PaperModel$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="nameList != null">
                        `name` in
                        <foreach collection="nameList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyName!=null and fuzzyName.size()>0">
                    (
                    <foreach collection="fuzzyName"  separator="or" item="item">
                        `Name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyName!=null and rightFuzzyName.size()>0">
                    (
                    <foreach collection="rightFuzzyName"  separator="or" item="item">
                        `Name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="subjectList != null">
                        `subject` in
                        <foreach collection="subjectList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="subjectSt !=null">
                    `subject` >= #{subjectSt} and
                </if>
                <if test="subjectEd!=null">
                    `subject` &lt;= #{subjectEd} and
                </if>
                    <if test="levelList != null">
                        `level` in
                        <foreach collection="levelList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="levelSt !=null">
                    `level` >= #{levelSt} and
                </if>
                <if test="levelEd!=null">
                    `level` &lt;= #{levelEd} and
                </if>
                    <if test="areaList != null">
                        `area` in
                        <foreach collection="areaList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyArea!=null and fuzzyArea.size()>0">
                    (
                    <foreach collection="fuzzyArea"  separator="or" item="item">
                        `Area` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyArea!=null and rightFuzzyArea.size()>0">
                    (
                    <foreach collection="rightFuzzyArea"  separator="or" item="item">
                        `Area` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="sourceList != null">
                        `source` in
                        <foreach collection="sourceList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzySource!=null and fuzzySource.size()>0">
                    (
                    <foreach collection="fuzzySource"  separator="or" item="item">
                        `Source` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzySource!=null and rightFuzzySource.size()>0">
                    (
                    <foreach collection="rightFuzzySource"  separator="or" item="item">
                        `Source` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="difficultyList != null">
                        `difficulty` in
                        <foreach collection="difficultyList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="difficultySt !=null">
                    `difficulty` >= #{difficultySt} and
                </if>
                <if test="difficultyEd!=null">
                    `difficulty` &lt;= #{difficultyEd} and
                </if>
                    <if test="pay_rmbList != null">
                        `pay_rmb` in
                        <foreach collection="pay_rmbList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="pay_rmbSt !=null">
                    `pay_rmb` >= #{pay_rmbSt} and
                </if>
                <if test="pay_rmbEd!=null">
                    `pay_rmb` &lt;= #{pay_rmbEd} and
                </if>
                    <if test="pay_coinList != null">
                        `pay_coin` in
                        <foreach collection="pay_coinList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="pay_coinSt !=null">
                    `pay_coin` >= #{pay_coinSt} and
                </if>
                <if test="pay_coinEd!=null">
                    `pay_coin` &lt;= #{pay_coinEd} and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `name`,
        `subject`,
        `level`,
        `area`,
        `source`,
        `difficulty`,
        `pay_rmb`,
        `pay_coin`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof com.vplan.backend.model.PaperModel$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.name==true">
                        `name`,
                    </if>
                    <if test="fetchFields.fetchFields.subject==true">
                        `subject`,
                    </if>
                    <if test="fetchFields.fetchFields.level==true">
                        `level`,
                    </if>
                    <if test="fetchFields.fetchFields.area==true">
                        `area`,
                    </if>
                    <if test="fetchFields.fetchFields.source==true">
                        `source`,
                    </if>
                    <if test="fetchFields.fetchFields.difficulty==true">
                        `difficulty`,
                    </if>
                    <if test="fetchFields.fetchFields.pay_rmb==true">
                        `pay_rmb`,
                    </if>
                    <if test="fetchFields.fetchFields.pay_coin==true">
                        `pay_coin`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.name==null">
                        `name`,
                    </if>
                    <if test="fetchFields.excludeFields.subject==null">
                        `subject`,
                    </if>
                    <if test="fetchFields.excludeFields.level==null">
                        `level`,
                    </if>
                    <if test="fetchFields.excludeFields.area==null">
                        `area`,
                    </if>
                    <if test="fetchFields.excludeFields.source==null">
                        `source`,
                    </if>
                    <if test="fetchFields.excludeFields.difficulty==null">
                        `difficulty`,
                    </if>
                    <if test="fetchFields.excludeFields.pay_rmb==null">
                        `pay_rmb`,
                    </if>
                    <if test="fetchFields.excludeFields.pay_coin==null">
                        `pay_coin`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof com.vplan.backend.model.PaperModel$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>